@model DNXTest.Models.ContactDonorInfo
@*

*@
@{
    string inputDateFieldHTML__WithValue = "<input class='form-control text-box single-line ' disabled data-val='true' data-val-date='The field {0} must be a date.' data-val-required='The {0} field is required.' id='{0}' name='ContactDonorInfo[{0}]' type='date' value='{1}' />";
    string hiddenInputFieldContact_WithValue = "<input type='text' class='hide selectedIds' type='text' autocomplete='off' name='ContactDonorInfo[{0}]' value ='{1}' >";

}
<div class="col-sm-4">
    <div class="form-group">
        <label class="" for="FiscalId">Last Donation date</label>
        <div class="">
            @Html.Raw(string.Format(inputDateFieldHTML__WithValue, "LastDonationDate", Model.LastDonationDate ?? DateTime.MinValue))
        </div>
    </div>
</div>
    <div class="col-sm-4">
    <div class="form-group">
        <label class="" for="Spoken Languages">Religious Situation</label>
        <div class="">
            <div class="divCombobox">
                @{var listofItems = new SelectList(new List<SelectListItem>()
                        {
                            new SelectListItem() {Value ="0", Text=""},
                            new SelectListItem() {Value ="1", Text="Laymen"},
                            new SelectListItem() {Value ="2", Text="Ordained"},
                            new SelectListItem() {Value ="3", Text="Full Ordination"},
                            new SelectListItem() {Value ="4", Text="Disrobed"},
                        });
                    string[] DonorReligiousSituation = Model.DonorReligiousSituationId.Split(',');
                }

                @Html.Raw(string.Format("<select class='form-control selectpicker' name=''>"))
                @foreach (SelectListItem i in listofItems.Items)
                {
                    string val = i.Value;
                    if (DonorReligiousSituation.Contains(val))
                    {
                        @Html.Raw(string.Format("<option value={0} selected>{1}</option>", i.Value, i.Text));
                    }
                    else
                    {
                        @Html.Raw(string.Format("<option value={0} >{1}</option>", i.Value, i.Text));
                    }
                }
                @Html.Raw(string.Format("</select>"))

                @Html.Raw(string.Format(hiddenInputFieldContact_WithValue, "DonorReligiousSituationId", Model.DonorReligiousSituationId))
            </div>
        </div>
    </div>
</div>
<div class="col-sm-4">
    <div class="form-group">
        <label class="" for="DonorTypeId">Donor Type</label>
        <div class="">
            <div class="divCombobox">
                @{var listofItems2 = new SelectList(new List<SelectListItem>()
                        {
                            new SelectListItem() {Value ="0", Text=""},
                            new SelectListItem() {Value ="1", Text="Small"},
                            new SelectListItem() {Value ="2", Text="Big"},
                            new SelectListItem() {Value ="3", Text="Grand Sponsor"},
                            new SelectListItem() {Value ="4", Text="Friends of Nalanda"},
                        });
                    string[] DonorTypeId = Model.DonorTypeId.Split(',');
                }

                @Html.Raw(string.Format("<select class='form-control selectpicker'  name=''>"))
                @foreach (SelectListItem i in listofItems2.Items)
                {
                    string val = i.Value;
                    if (DonorTypeId.Contains(val))
                    {
                        @Html.Raw(string.Format("<option value={0} selected>{1}</option>", i.Value, i.Text));
                    }
                    else
                    {
                        @Html.Raw(string.Format("<option value={0} >{1}</option>", i.Value, i.Text));
                    }
                }
                @Html.Raw(string.Format("</select>"))

                @Html.Raw(string.Format(hiddenInputFieldContact_WithValue, "DonorTypeId", Model.DonorTypeId))
            </div>
        </div>
    </div>

</div>

 <div class="col-sm-12">
    <div class="form-group">
        <label class="" for="Spoken Languages">Donor Contexts</label>
        <div class="">
            <div class="divComboboxx">
                @{var listofItems3 = new SelectList(new List<SelectListItem>()
                        {
                            new SelectListItem() {Value ="0", Text=""},
                            new SelectListItem() {Value ="1", Text="Is a BP student"},
                            new SelectListItem() {Value ="2", Text="Was a BP student"},
                            new SelectListItem() {Value ="3", Text="Is a MP student"},
                            new SelectListItem() {Value ="4", Text="Was a MP student"},
                            new SelectListItem() {Value ="5", Text="Is a volunteer"},
                            new SelectListItem() {Value ="6", Text="Was a volunteer"},
                        });
                    string[] DonorContexts = Model.DonorContexts.Split(',');
                }

                @Html.Raw(string.Format("<select class='form-control selectpicker'  multiple data-selected-text-format='count > 15' name=''>"))
                @foreach (SelectListItem i in listofItems3.Items)
            {
                string val = i.Value;
                if (DonorContexts.Contains(val))
                {
                        @Html.Raw(string.Format("<option value={0} selected>{1}</option>", i.Value, i.Text));
                }
                else
                {
                        @Html.Raw(string.Format("<option value={0} >{1}</option>", i.Value, i.Text));
                }
            }
                @Html.Raw(string.Format("</select>"))

                @Html.Raw(string.Format(hiddenInputFieldContact_WithValue, "DonorContexts", Model.DonorContexts))
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="" for="Spoken Languages">Donor Interests</label>
        <div class="">
            <div class="divComboboxx">
                @{var listofItems4 = new SelectList(new List<SelectListItem>()
                        {
                            new SelectListItem() {Value ="0", Text=""},
                            new SelectListItem() {Value ="1", Text="Studies"},
                            new SelectListItem() {Value ="2", Text="Vipassana retreats"},
                            new SelectListItem() {Value ="3", Text="Lam Rim retreats"},
                            new SelectListItem() {Value ="4", Text="Samatha retreats"},
                            new SelectListItem() {Value ="5", Text="Tara Puja"},
                            new SelectListItem() {Value ="6", Text="Medicine Buddha Puja"},
                            new SelectListItem() {Value ="7", Text="Vajrasattva Puja"},
                            new SelectListItem() {Value ="8", Text="Guru Yoga"},
                            new SelectListItem() {Value ="9", Text="35 Buddhas Confession"}
                        });
                    string[] DonorInterests = Model.DonorInterests.Split(',');
                }

                @Html.Raw(string.Format("<select class='form-control selectpicker'  multiple data-selected-text-format='count > 10' name=''>"))
                @foreach (SelectListItem i in listofItems4.Items)
                {
                    string val = i.Value;
                    if (DonorInterests.Contains(val))
                    {
                            @Html.Raw(string.Format("<option value={0} selected>{1}</option>", i.Value, i.Text));
                    }
                    else
                    {
                            @Html.Raw(string.Format("<option value={0} >{1}</option>", i.Value, i.Text));
                    }
                }
                @Html.Raw(string.Format("</select>"))

                @Html.Raw(string.Format(hiddenInputFieldContact_WithValue, "DonorInterests", Model.DonorInterests))
            </div>
        </div>
    </div>
</div>